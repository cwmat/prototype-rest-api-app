{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/smellprofile-details/smellprofile-details.component.css","./src/app/smellprofile-details/smellprofile-details.component.html","./src/app/smellprofile-details/smellprofile-details.component.ts","./src/app/smellprofile-gallery/smellprofile-gallery.component.css","./src/app/smellprofile-gallery/smellprofile-gallery.component.html","./src/app/smellprofile-gallery/smellprofile-gallery.component.ts","./src/app/smellprofile-list/smellprofile-list.component.css","./src/app/smellprofile-list/smellprofile-list.component.html","./src/app/smellprofile-list/smellprofile-list.component.ts","./src/app/smellprofile-map/smellprofile-map.component.css","./src/app/smellprofile-map/smellprofile-map.component.html","./src/app/smellprofile-map/smellprofile-map.component.ts","./src/app/smellprofile-new/smellprofile-new.component.css","./src/app/smellprofile-new/smellprofile-new.component.html","./src/app/smellprofile-new/smellprofile-new.component.ts","./src/app/smellprofile-update/smellprofile-update.component.css","./src/app/smellprofile-update/smellprofile-update.component.html","./src/app/smellprofile-update/smellprofile-update.component.ts","./src/app/smellprofile.service.ts","./src/app/smellprofile.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"starter {\\r\\n  margin-top: 10em;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Smellmap - Assignment 6';\n\n  constructor() {  }\n\n  ngOnInit() {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { SmellprofileListComponent } from './smellprofile-list/smellprofile-list.component';\r\nimport { SmellprofileMapComponent } from './smellprofile-map/smellprofile-map.component';\r\nimport { SmellprofileDetailsComponent } from './smellprofile-details/smellprofile-details.component';\r\nimport { SmellprofileGalleryComponent } from './smellprofile-gallery/smellprofile-gallery.component';\r\nimport { SmellprofileNewComponent } from './smellprofile-new/smellprofile-new.component';\nimport { SmellprofileUpdateComponent } from './smellprofile-update/smellprofile-update.component';\r\n\r\n// import { AgmCoreModule } from '@agm/core';\r\n\r\nconst routes:Routes = [\r\n  { path: '', redirectTo: '/gallery', pathMatch: 'full'},\r\n  { path: 'gallery', component: SmellprofileGalleryComponent },\r\n  { path: 'smell/:id', component: SmellprofileDetailsComponent }\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SmellprofileListComponent,\r\n    SmellprofileMapComponent,\r\n    SmellprofileDetailsComponent,\r\n    SmellprofileGalleryComponent,\r\n    SmellprofileNewComponent,\r\n    SmellprofileUpdateComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    RouterModule.forRoot(\r\n      routes\r\n    )\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"starter {\\r\\n  margin-top: 10em;\\r\\n}\\r\\n\\r\\nbtn-secondary {\\r\\n  margin-left: 1em;\\r\\n}\\r\\n\\r\\ntbody tr:hover {\\r\\n  color: rgb(241, 95, 210);\\r\\n}\\r\\n\\r\\ntbody tr.selected {\\r\\n  color: rgb(198, 240, 49);\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/smellprofile-details/smellprofile-details.component.css\n// module id = ./src/app/smellprofile-details/smellprofile-details.component.css\n// module chunks = main","module.exports = \"<!-- State change buttons -->\\r\\n<div class=\\\"row starter\\\" style=\\\"margin-top: 5em;\\\">\\r\\n  <div class=\\\"col-lg-12 text-center starter\\\">\\r\\n    <button class=\\\"btn\\\" [class.btn-primary]=\\\"viewState == 'Details'\\\" (click)=\\\"changeViewState('Details')\\\">Details View</button>\\r\\n    <button class=\\\"btn\\\" [class.btn-primary]=\\\"viewState == 'Update'\\\" (click)=\\\"changeViewState('Update')\\\">Update View</button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Find one -->\\r\\n<div class=\\\"row\\\" *ngIf=\\\"viewState == 'Details'\\\">\\r\\n    <!-- <div class=\\\"row\\\"> -->\\r\\n  <div class=\\\"col-lg-12 text-center\\\">\\r\\n    <h1 class=\\\"mt-5\\\">Smellprofile Details</h1>\\r\\n    <div class=\\\"table-responsive\\\">\\r\\n      <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>Field</th>\\r\\n            <th>Value</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody id=\\\"list-table\\\">\\r\\n          <tr [class.selected]=\\\"smellprofile === selectedSmellprofile\\\">\\r\\n            <td>ID</td>\\r\\n            <td>{{ smellprofile._id }}</td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>Name</td>\\r\\n            <td>{{ smellprofile.name }}</td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>Long/Lat</td>\\r\\n            <td>{{ smellprofile.long }}, {{ smellprofile.lat }}</td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>Type</td>\\r\\n            <td>{{ smellprofile.type }}</td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>Description</td>\\r\\n            <td>{{ smellprofile.desc }}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n    <!-- Map -->\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-12\\\">\\r\\n        <div class=\\\"panel panel-default\\\">\\r\\n          <div class=\\\"panel-body\\\">\\r\\n            <div #Detailsgmap style=\\\"height: 300px;\\\"></div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <!-- Buttons -->\\r\\n    <div class=\\\"row\\\" style=\\\"margin-top: 1em;\\\">\\r\\n      <div class=\\\"col-lg-12\\\">\\r\\n        <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"deleteSmell()\\\">Delete This Smell</button>\\r\\n        <button class=\\\"btn btn-warning\\\" style=\\\"margin-left: 1em;\\\" type=\\\"button\\\" (click)=\\\"goBack()\\\">Back to Gallery</button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- End Col -->\\r\\n  </div>\\r\\n  <!-- End if row -->\\r\\n</div>\\r\\n\\r\\n<!-- Update component -->\\r\\n<app-smellprofile-update *ngIf=\\\"viewState == 'Update'\\\"></app-smellprofile-update>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/smellprofile-details/smellprofile-details.component.html\n// module id = ./src/app/smellprofile-details/smellprofile-details.component.html\n// module chunks = main","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport {\r\n  ActivatedRoute,\r\n  Router\r\n} from '@angular/router';\r\n\r\n// Import data service and data class\r\nimport {\r\n  SmellprofileService\r\n} from '../smellprofile.service';\r\nimport {\r\n  Smellprofile\r\n} from '../smellprofile';\r\n\r\n// Import Google Map TS types\r\nimport {} from '@types/googlemaps';\r\n\r\n@Component({\r\n  selector: 'app-smellprofile-details',\r\n  templateUrl: './smellprofile-details.component.html',\r\n  styleUrls: ['./smellprofile-details.component.css'],\r\n  providers: [SmellprofileService]\r\n})\r\nexport class SmellprofileDetailsComponent implements OnInit {\r\n  // Google map instance members\r\n  @ViewChild('Detailsgmap') detailsGmapElement: any;\r\n  map: google.maps.Map;\r\n  // Data isntance member\r\n  smellprofile;\r\n  // State change instance member\r\n  viewState: String = \"Details\";\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private smellprofileService: SmellprofileService,\r\n    private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    // Find the specified Smell\r\n    this.getSmell();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // Draw the map after the DOM has rendered\r\n    this.refreshMap();\r\n  }\r\n\r\n  getSmell(): void {\r\n    // Use data service to find a specific smell\r\n    const param = this.route.snapshot.paramMap.get('id');\r\n    this.smellprofileService.getSmell(param)\r\n      .subscribe(smellprofile => {\r\n        this.smellprofile = smellprofile[0];\r\n      });\r\n  }\r\n\r\n  // Deletes smell using data Service\r\n  deleteSmell() {\r\n    if (confirm(`Are you sure you want to delete ${this.smellprofile.desc}?`)) {\r\n      console.log(`deleting ${this.smellprofile._id}`);\r\n      this.smellprofileService.deleteSmell(this.smellprofile._id)\r\n        .subscribe((result) => {\r\n          alert(`Smellprofile ${this.smellprofile.desc} has been deleted`);\r\n          this.router.navigate(['/gallery']);\r\n        })\r\n    }\r\n  }\r\n\r\n  goBack(): void {\r\n    // Navigate back to gallery\r\n    this.router.navigate(['/gallery']);\r\n  }\r\n\r\n  // Change the view state between 'Details' and 'Update'\r\n  changeViewState(newState): void {\r\n    this.viewState = newState;\r\n\r\n    if (this.viewState == 'Details') {\r\n      location.reload();\r\n    }\r\n  }\r\n\r\n  refreshMap(): void {\r\n    console.log(\"INIT!\");\r\n    // Rough center point for Richmond, VA\r\n    var rva = {\r\n      lat: 37.536954951447285,\r\n      lng: -77.43867874145508\r\n    };\r\n\r\n    // Define a GMap\r\n    this.map = new google.maps.Map(this.detailsGmapElement.nativeElement, {\r\n      zoom: 12,\r\n      center: rva\r\n    });\r\n\r\n    // Set a marker\r\n    let marker = new google.maps.Marker({\r\n      position: {\r\n        lat: this.smellprofile.lat,\r\n        lng: this.smellprofile.long\r\n      },\r\n      map: this.map,\r\n      title: this.smellprofile.desc\r\n    });\r\n\r\n    // Cetner map\r\n    this.map.setCenter({\r\n      lat: this.smellprofile.lat,\r\n      lng: this.smellprofile.long\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/smellprofile-details/smellprofile-details.component.ts","module.exports = \"starter {\\r\\n    margin-top: 10em;\\r\\n  }\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/smellprofile-gallery/smellprofile-gallery.component.css\n// module id = ./src/app/smellprofile-gallery/smellprofile-gallery.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row starter\\\" style=\\\"margin-top: 5em;\\\">\\r\\n    <div class=\\\"col-lg-12 text-center starter\\\">\\r\\n  <button class=\\\"btn\\\" [class.btn-primary]=\\\"viewState == 'Map'\\\" (click)=\\\"changeViewState('Map')\\\">Map View</button>\\r\\n  <button class=\\\"btn\\\" [class.btn-primary]=\\\"viewState == 'List'\\\" (click)=\\\"changeViewState('List')\\\">List View</button>\\r\\n  <button class=\\\"btn\\\" [class.btn-primary]=\\\"viewState == 'New'\\\" (click)=\\\"changeViewState('New')\\\">Create New</button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row starter\\\">\\r\\n  <div class=\\\"col-lg-12 text-center\\\">\\r\\n    <h1>Smell Map</h1>\\r\\n  </div>\\r\\n</div>\\r\\n<app-smellprofile-list *ngIf=\\\"viewState == 'List'\\\"></app-smellprofile-list>\\r\\n<app-smellprofile-map *ngIf=\\\"viewState == 'Map'\\\"></app-smellprofile-map>\\r\\n<app-smellprofile-new *ngIf=\\\"viewState == 'New'\\\" (newSmellEvent)=\\\"updateSmells()\\\"></app-smellprofile-new>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/smellprofile-gallery/smellprofile-gallery.component.html\n// module id = ./src/app/smellprofile-gallery/smellprofile-gallery.component.html\n// module chunks = main","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild\r\n} from '@angular/core';\r\n\r\nimport {\r\n  SmellprofileListComponent\r\n} from \"../smellprofile-list/smellprofile-list.component\";\r\n\r\n@Component({\r\n  selector: 'app-smellprofile-gallery',\r\n  templateUrl: './smellprofile-gallery.component.html',\r\n  styleUrls: ['./smellprofile-gallery.component.css']\r\n})\r\nexport class SmellprofileGalleryComponent implements OnInit {\r\n  @ViewChild(SmellprofileListComponent) child: SmellprofileListComponent;\r\n  viewState: String = 'Map';\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n  // Change view state back to map after creating a new smell\r\n  updateSmells() {\r\n    this.child.getSmells();\r\n    this.changeViewState('Map');\r\n  }\r\n\r\n  // Set view state as either: 'Map', 'List', or 'Create'\r\n  changeViewState(newState): void {\r\n    this.viewState = newState;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/smellprofile-gallery/smellprofile-gallery.component.ts","module.exports = \"tbody tr:hover {\\r\\n  color: rgb(241, 95, 210);\\r\\n}\\r\\n\\r\\ntbody tr.selected {\\r\\n  color: rgb(198, 240, 49);\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/smellprofile-list/smellprofile-list.component.css\n// module id = ./src/app/smellprofile-list/smellprofile-list.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12\\\">\\r\\n    <div class=\\\"panel panel-default\\\">\\r\\n      <div class=\\\"panel-heading\\\">Smellmap Entries</div>\\r\\n      <div class=\\\"panel-body\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-striped\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th>ID</th>\\r\\n                <th>Name</th>\\r\\n                <th>Lon/Lat</th>\\r\\n                <th>Type</th>\\r\\n                <th>Description</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody id=\\\"list-table\\\">\\r\\n              <tr *ngFor='let smellprofile of smellList'\\r\\n              [class.selected]=\\\"smellprofile === selectedSmellprofile\\\"\\r\\n              (click)=\\\"onSelect(smellprofile)\\\">\\r\\n                <td>{{ smellprofile._id }}</td>\\r\\n                <td>{{ smellprofile.name }}</td>\\r\\n                <td>{{ smellprofile.long }}, {{ smellprofile.lat }}</td>\\r\\n                <td>{{ smellprofile.type }}</td>\\r\\n                <td>{{ smellprofile.desc }}</td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/smellprofile-list/smellprofile-list.component.html\n// module id = ./src/app/smellprofile-list/smellprofile-list.component.html\n// module chunks = main","import {\r\n  Component,\r\n  OnInit,\r\n  Input\r\n} from '@angular/core';\r\nimport {\r\n  ActivatedRoute,\r\n  Router\r\n} from '@angular/router';\r\n\r\n// Import data service and data class\r\nimport {\r\n  SmellprofileService\r\n} from '../smellprofile.service';\r\nimport {\r\n  Smellprofile\r\n} from '../smellprofile';\r\n\r\n@Component({\r\n  selector: 'app-smellprofile-list',\r\n  templateUrl: './smellprofile-list.component.html',\r\n  styleUrls: ['./smellprofile-list.component.css'],\r\n  providers: [SmellprofileService]\r\n})\r\nexport class SmellprofileListComponent implements OnInit {\r\n  // Define properties for holding data from data service\r\n  smellList: any;\r\n  selectedSmellprofile: Smellprofile;\r\n\r\n  // Inject data service in constructor\r\n  constructor(private smellprofileService: SmellprofileService,\r\n    private router: Router) {}\r\n\r\n  // On init, call the getSmells() method to obtain data from dataservice\r\n  ngOnInit() {\r\n    this.getSmells();\r\n  }\r\n\r\n  // Uses data service to pull data fro REST API\r\n  getSmells(): void {\r\n    // Subscribe to observable to obtain data asynchronously\r\n    this.smellprofileService.listSmells()\r\n      .subscribe(smellList => this.smellList = smellList);\r\n  }\r\n\r\n  // Upon selecting a table row, set that smellprofile as the currently selected.\r\n  onSelect(smellprofile: Smellprofile): void {\r\n    this.selectedSmellprofile = smellprofile;\r\n    this.router.navigate(['/smell/' + this.selectedSmellprofile._id]);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/smellprofile-list/smellprofile-list.component.ts","module.exports = \"#map {\\r\\n  height: 400px;\\r\\n}\\r\\n\\r\\n.map-text {\\r\\n  color: black !important;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/smellprofile-map/smellprofile-map.component.css\n// module id = ./src/app/smellprofile-map/smellprofile-map.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12\\\">\\r\\n    <div class=\\\"panel panel-default\\\">\\r\\n      <div class=\\\"panel-body\\\">\\r\\n        <div #gmap style=\\\"height: 600px;\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/smellprofile-map/smellprofile-map.component.html\n// module id = ./src/app/smellprofile-map/smellprofile-map.component.html\n// module chunks = main","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  ViewChild,\r\n  OnChanges\r\n} from '@angular/core';\r\nimport {\r\n  Smellprofile\r\n} from '../smellprofile';\r\nimport {\r\n  SmellprofileService\r\n} from '../smellprofile.service';\r\n\r\n// Import Google Map TS types\r\nimport {} from '@types/googlemaps';\r\n\r\n@Component({\r\n  selector: 'app-smellprofile-map',\r\n  templateUrl: './smellprofile-map.component.html',\r\n  styleUrls: ['./smellprofile-map.component.css'],\r\n  providers: [SmellprofileService]\r\n})\r\nexport class SmellprofileMapComponent implements OnInit {\r\n  // Set the gmap div as a ViewChild\r\n  @ViewChild('gmap') gmapElement: any;\r\n  // Define a map property that will store a GMaps object\r\n  map: google.maps.Map;\r\n  // Define a marker property that will store a GMaps marker object\r\n  marker: google.maps.Marker;\r\n  mapList;\r\n\r\n  // Inject data from smellprofile-list (comes from an on-click event)\r\n  @Input() smellprofile: Smellprofile;\r\n  @Input() smellList: any;\r\n\r\n  constructor(private smellprofileService: SmellprofileService) {}\r\n\r\n  ngOnInit() {\r\n    // Rough center point for Richmond, VA\r\n    var rva = {\r\n      lat: 37.536954951447285,\r\n      lng: -77.43867874145508\r\n    };\r\n\r\n    // Define a GMap\r\n    this.map = new google.maps.Map(this.gmapElement.nativeElement, {\r\n      zoom: 12,\r\n      center: rva\r\n    });\r\n\r\n    this.addMarkers();\r\n\r\n    // When the user clicks, open an infowindow\r\n    this.map.data.addListener('click', function (event) {\r\n      var myHTML = \"<p><strong>\" + event.feature.getProperty(\"name\") + \"</strong></p>\" + \"<p>\" + event.feature.getProperty(\"type\") + \"</p>\" + \"<p>\" + event.feature.getProperty(\"desc\") + \"</p>\" + event.feature.getProperty(\"edit\") + event.feature.getProperty(\"delete\");\r\n      this.infowindow.setContent(\"<div style='width:150px; text-align: center;'>\" + myHTML + \"</div>\");\r\n      this.infowindow.setPosition(event.feature.getGeometry().get());\r\n      this.infowindow.setOptions({\r\n        pixelOffset: new google.maps.Size(0, -30)\r\n      });\r\n      this.infowindow.open(this.map);\r\n    });\r\n  }\r\n\r\n  getSmells(): void {\r\n    // Subscribe to observable to obtain data asynchronously\r\n    this.smellprofileService.listSmells()\r\n      .subscribe(smellList => this.smellList = smellList);\r\n  }\r\n\r\n  // Load all data as markers on map\r\n  addMarkers(): void {\r\n    this.smellprofileService.listSmells()\r\n      .subscribe(mapList => {\r\n        this.mapList = mapList\r\n        for (let i: number = 0; i <= this.mapList.length; i++) {\r\n          let currentSmell = this.mapList[i];\r\n          let myHTML = \"<div class='map-text' style='color: black;'>\" + \"<p style='font-weight: bold;'>\" + currentSmell.type + \"</p>\" + \"<p>\" + currentSmell.desc + \"</p>\" + \"<p><a href='/smell/\" + currentSmell._id + \"'>Details</a></p>\" + \"</div>\";\r\n          let infowindow = new google.maps.InfoWindow({\r\n            content: myHTML\r\n          });\r\n          let marker = new google.maps.Marker({\r\n            position: {\r\n              lat: this.mapList[i].lat,\r\n              lng: this.mapList[i].long\r\n            },\r\n            map: this.map,\r\n            title: this.mapList[i].desc\r\n          });\r\n          marker.addListener('click', function () {\r\n            infowindow.open(this.map, marker);\r\n          });\r\n        }\r\n      });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/smellprofile-map/smellprofile-map.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/smellprofile-new/smellprofile-new.component.css\n// module id = ./src/app/smellprofile-new/smellprofile-new.component.css\n// module chunks = main","module.exports = \"<!-- Create -->\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-12\\\">\\r\\n    <h1 class=\\\"mt-5 starter\\\">Add Data</h1>\\r\\n    <div id=\\\"page-wrapper\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-12\\\">\\r\\n          <div class=\\\"container\\\">\\r\\n            <div class=\\\"panel panel-default\\\">\\r\\n              <div class=\\\"panel-body\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                  <div class=\\\"col-lg-12 page-wrapper\\\">\\r\\n                    <form #newSmellForm=\\\"ngForm\\\" (ngSubmit)=\\\"createSmell(newSmellForm)\\\">\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label>Name</label>\\r\\n                        <input required [(ngModel)]=\\\"newSmell.name\\\" #name=\\\"ngModel\\\" placeholder=\\\"Enter text\\\" name=\\\"name\\\" class=\\\"form-control\\\" />\\r\\n                        <div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\" class=\\\"alert alert-danger\\\">Field is required</div>\\r\\n                      </div>\\r\\n\\r\\n                      <!-- Map -->\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-lg-12\\\">\\r\\n                          <div class=\\\"panel panel-default\\\">\\r\\n                            <div class=\\\"panel-body\\\">\\r\\n                              <div #Creategmap style=\\\"height: 300px;\\\"></div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"col-lg-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label>Longitude</label>\\r\\n                          <input required type=\\\"number\\\" #long=\\\"ngModel\\\" [(ngModel)]=\\\"newSmell.long\\\" placeholder=\\\"Enter text\\\" name=\\\"lon\\\" class=\\\"form-control\\\"\\r\\n                          />\\r\\n                          <div *ngIf=\\\"long.invalid && (long.dirty || long.touched)\\\" class=\\\"alert alert-danger\\\">Field is required and must be numeric</div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-lg-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                          <label>Latitude</label>\\r\\n                          <input required type=\\\"number\\\" #lat=\\\"ngModel\\\" [(ngModel)]=\\\"newSmell.lat\\\" placeholder=\\\"Enter text\\\" name=\\\"lat\\\" class=\\\"form-control\\\"\\r\\n                          />\\r\\n                          <div *ngIf=\\\"lat.invalid && (lat.dirty || lat.touched)\\\" class=\\\"alert alert-danger\\\">Field is required and must be numeric</div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label>Type</label>\\r\\n                        <select required #type=\\\"ngModel\\\" [(ngModel)]=\\\"newSmell.type\\\" name=\\\"type\\\" class=\\\"form-control\\\">\\r\\n                          <option>Good</option>\\r\\n                          <option>Neutral</option>\\r\\n                          <option>Bad</option>\\r\\n                        </select>\\r\\n                        <div *ngIf=\\\"type.invalid && (type.dirty || type.touched)\\\" class=\\\"alert alert-danger\\\">Field is required</div>\\r\\n                      </div>\\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label>Description</label>\\r\\n                        <textarea required #desc=\\\"ngModel\\\" [(ngModel)]=\\\"newSmell.desc\\\" rows=\\\"3\\\" name=\\\"desc\\\" class=\\\"form-control\\\"></textarea>\\r\\n                        <div *ngIf=\\\"desc.invalid && (desc.dirty || desc.touched)\\\" class=\\\"alert alert-danger\\\">Field is required</div>\\r\\n                      </div>\\r\\n                      <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!newSmellForm.valid\\\">Submit</button>\\r\\n                    </form>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <br />\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/smellprofile-new/smellprofile-new.component.html\n// module id = ./src/app/smellprofile-new/smellprofile-new.component.html\n// module chunks = main","import {\r\n  Component,\r\n  OnInit,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild\r\n} from '@angular/core';\r\n\r\n// Import data service and data class\r\nimport {\r\n  SmellprofileService\r\n} from '../smellprofile.service';\r\nimport {\r\n  Smellprofile\r\n} from '../smellprofile';\r\n\r\n@Component({\r\n  selector: 'app-smellprofile-new',\r\n  templateUrl: './smellprofile-new.component.html',\r\n  styleUrls: ['./smellprofile-new.component.css'],\r\n  providers: [SmellprofileService]\r\n})\r\nexport class SmellprofileNewComponent implements OnInit {\r\n  @ViewChild('Creategmap') detailsGmapElement: any;\r\n  map: google.maps.Map;\r\n  @Output() newSmellEvent = new EventEmitter();\r\n  newSmell: any = {};\r\n  marker: google.maps.Marker;\r\n\r\n\r\n  constructor(private smellprofileService: SmellprofileService) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  // Load map after DOM renders\r\n  ngAfterViewInit() {\r\n    this.refreshMap();\r\n  }\r\n\r\n  // Use data service to create new smell\r\n  createSmell(newSmellForm): void {\r\n    let data: any = {\r\n      name: this.newSmell.name,\r\n      type: this.newSmell.type,\r\n      desc: this.newSmell.desc,\r\n      lat: this.newSmell.lat,\r\n      lon: this.newSmell.long\r\n    };\r\n    console.log(\"Data\", data);\r\n    this.smellprofileService.createSmell(data)\r\n      .subscribe((smell) => {\r\n        console.log(\"Smell\", smell)\r\n        this.newSmellEvent.emit();\r\n        newSmellForm.reset();\r\n      });\r\n  }\r\n\r\n  // Create/refresh the map\r\n  refreshMap(): void {\r\n    console.log(\"INIT!\");\r\n    // Rough center point for Richmond, VA\r\n    var rva = {\r\n      lat: 37.536954951447285,\r\n      lng: -77.43867874145508\r\n    };\r\n\r\n    // Define a GMap\r\n    this.map = new google.maps.Map(this.detailsGmapElement.nativeElement, {\r\n      zoom: 12,\r\n      center: rva\r\n    });\r\n\r\n    google.maps.event.addListener(this.map, 'click', (event) => {\r\n      this.newSmell.lat = event.latLng.lat();\r\n      this.newSmell.long = event.latLng.lng();\r\n      \r\n      if (this.marker) {\r\n        this.marker.setMap(null);\r\n      }\r\n\r\n      this.marker = new google.maps.Marker({\r\n        position: {\r\n          lat: this.newSmell.lat,\r\n          lng: this.newSmell.long\r\n        },\r\n        map: this.map\r\n      });\r\n  \r\n      this.map.setCenter({\r\n        lat: this.newSmell.lat,\r\n        lng: this.newSmell.long\r\n      });\r\n    });\r\n  }\r\n\r\n  // Map click event for setting lat/long for input\r\n  mapClick(event): any {\r\n    this.newSmell.lat = event.latLng.lat();\r\n    this.newSmell.long = event.latLng.lng();\r\n    let marker = new google.maps.Marker({\r\n      position: {\r\n        lat: this.newSmell.lat,\r\n        lng: this.newSmell.long\r\n      },\r\n      map: this.map\r\n    });\r\n\r\n    this.map.setCenter({\r\n      lat: this.newSmell.lat,\r\n      lng: this.newSmell.long\r\n    });\r\n\r\n    console.log(this.newSmell.lat, this.newSmell.long);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/smellprofile-new/smellprofile-new.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/smellprofile-update/smellprofile-update.component.css\n// module id = ./src/app/smellprofile-update/smellprofile-update.component.css\n// module chunks = main","module.exports = \"<!-- Update -->\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <h1 class=\\\"mt-5 starter\\\">Update Data</h1>\\n    <div id=\\\"page-wrapper\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"container\\\">\\n            <div class=\\\"panel panel-default\\\">\\n              <div class=\\\"panel-body\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-12 page-wrapper\\\">\\n                    <form #newSmellForm=\\\"ngForm\\\" (ngSubmit)=\\\"updateSmell(newSmellForm.value)\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <label>Name</label>\\n                        <input [ngModel]=\\\"smellprofile.name\\\" #name placeholder=\\\"Enter text\\\" name=\\\"name\\\" class=\\\"form-control\\\" value=\\\"{{ smellprofile.name }}\\\" />\\n                      </div>\\n\\n                      <!-- Map -->\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-12\\\">\\n                          <div class=\\\"panel panel-default\\\">\\n                            <div class=\\\"panel-body\\\">\\n                              <div #Updategmap style=\\\"height: 300px;\\\"></div>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n\\n                      <div class=\\\"col-lg-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label>Longitude</label>\\n                          <input [ngModel]=\\\"smellprofile.long\\\" type=\\\"number\\\" #long placeholder=\\\"Enter text\\\" name=\\\"lon\\\" class=\\\"form-control\\\" value=\\\"{{ smellprofile.long }}\\\"\\n                          />\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-lg-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label>Latitude</label>\\n                          <input [ngModel]=\\\"smellprofile.lat\\\" type=\\\"number\\\" #lat placeholder=\\\"Enter text\\\" name=\\\"lat\\\" class=\\\"form-control\\\" value=\\\"{{ smellprofile.lat }}\\\"\\n                          />\\n                        </div>\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <label>Type</label>\\n                        <select [ngModel]=\\\"smellprofile.type\\\" #type name=\\\"type\\\" class=\\\"form-control\\\">\\n                          <option [selected]=\\\"smellprofile.type == 'Good'\\\">Good</option>\\n                          <option [selected]=\\\"smellprofile.type == 'Neutral'\\\">Neutral</option>\\n                          <option [selected]=\\\"smellprofile.type == 'Bad'\\\">Bad</option>\\n                        </select>\\n                      </div>\\n                      <div class=\\\"form-group\\\">\\n                        <label>Description</label>\\n                        <textarea [ngModel]=\\\"smellprofile.desc\\\" #desc rows=\\\"3\\\" name=\\\"desc\\\" class=\\\"form-control\\\" value=\\\"{{ smellprofile.desc }}\\\">{{ smellprofile.desc }}</textarea>\\n                      </div>\\n                      <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!newSmellForm.valid\\\">Submit</button>\\n                    </form>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<br />\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/smellprofile-update/smellprofile-update.component.html\n// module id = ./src/app/smellprofile-update/smellprofile-update.component.html\n// module chunks = main","import {\n  Component,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport {\n  ActivatedRoute,\n  Router\n} from '@angular/router';\n\n// Import data service and data class\nimport {\n  SmellprofileService\n} from '../smellprofile.service';\nimport {\n  Smellprofile\n} from '../smellprofile';\n\n// Import Google Map TS types\nimport {} from '@types/googlemaps';\n\n@Component({\n  selector: 'app-smellprofile-update',\n  templateUrl: './smellprofile-update.component.html',\n  styleUrls: ['./smellprofile-update.component.css'],\n  providers: [SmellprofileService]\n})\nexport class SmellprofileUpdateComponent implements OnInit {\n  @ViewChild('Updategmap') updateGmapElement: any;\n  uMap: google.maps.Map;\n  updateMarker;\n  smellprofile;\n  updateProfile: any = {};\n\n  constructor(private route: ActivatedRoute,\n    private smellprofileService: SmellprofileService,\n    private router: Router) {}\n\n\n  ngOnInit() {\n    this.getSmell();\n  }\n\n  // Draw map after rendering DOM\n  ngAfterViewInit() {\n    this.updateMap();\n  }\n\n  // Get a specific smell\n  getSmell(): void {\n    const param = this.route.snapshot.paramMap.get('id');\n    this.smellprofileService.getSmell(param)\n      .subscribe(smellprofile => {\n        this.smellprofile = smellprofile[0];\n        // this.updateProfile = this.smellprofile;\n      });\n  }\n\n  // Use data service to update entry\n  updateSmell(form: any): void {\n    this.updateProfile.name = form.name;\n    this.updateProfile.type = form.type;\n    this.updateProfile.desc = form.desc;\n    this.updateProfile.lat = form.lat;\n    this.updateProfile.lon = form.lon;\n    console.log(this.updateProfile);\n    this.smellprofileService.updateSmell(this.smellprofile._id, this.updateProfile)\n      .subscribe((result) => {\n        // location.reload();\n      });\n  }\n\n  // Draw/refresh the map\n  updateMap(): void {\n    console.log(\"INIT!\");\n    // Rough center point for Richmond, VA\n    var rva = {\n      lat: 37.536954951447285,\n      lng: -77.43867874145508\n    };\n\n    // Define a GMap\n    this.uMap = new google.maps.Map(this.updateGmapElement.nativeElement, {\n      zoom: 12,\n      center: rva\n    });\n\n    this.updateMarker = new google.maps.Marker({\n      position: {\n        lat: this.smellprofile.lat,\n        lng: this.smellprofile.long\n      },\n      map: this.uMap,\n      title: this.smellprofile.desc\n    });\n\n    this.uMap.setCenter({\n      lat: this.smellprofile.lat,\n      lng: this.smellprofile.long\n    });\n\n    google.maps.event.addListener(this.uMap, 'click', (event) => {\n      this.smellprofile.lat = event.latLng.lat();\n      this.smellprofile.long = event.latLng.lng();\n\n      if (this.updateMarker) {\n        this.updateMarker.setMap(null);\n      }\n\n      this.updateMarker = new google.maps.Marker({\n        position: {\n          lat: this.smellprofile.lat,\n          lng: this.smellprofile.long\n        },\n        map: this.uMap\n      });\n\n      this.uMap.setCenter({\n        lat: this.smellprofile.lat,\n        lng: this.smellprofile.long\n      });\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/smellprofile-update/smellprofile-update.component.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { of } from 'rxjs/observable/of';\r\n\r\nimport { Smellprofile } from './smellprofile';\r\nimport { SMELLPROFILES } from './mock-data';\r\nimport { environment } from '../environments/environment';\r\n\r\n@Injectable()\r\nexport class SmellprofileService {\r\n  private apiurl = environment.apiurl;\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  // List all smells\r\n  listSmells() {\r\n    return this.http.get(this.apiurl);\r\n  }\r\n\r\n  // Get a single smell\r\n  getSmell(id:string) {\r\n    return this.http.get(this.apiurl + id);\r\n  }\r\n\r\n  // Create\r\n  createSmell(smell: JSON){\r\n    return this.http.post(this.apiurl, smell);\r\n  }\r\n\r\n  // Update\r\n  updateSmell(id, data){\r\n      return this.http.put(this.apiurl + id, data);\r\n  }\r\n\r\n  // Delete\r\n  deleteSmell(id){\r\n    return this.http.delete(this.apiurl + id);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/smellprofile.service.ts","// Define a schema for smellprofiles\r\nexport class Smellprofile {\r\n  _id: number;\r\n  name: string;\r\n  type: string;\r\n  desc: string;\r\n  lat: number;\r\n  long: number;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/smellprofile.ts","export const environment = {\n  production: true,\n  apiurl: 'http://67.205.177.107:8086/api/smellmap/'\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}